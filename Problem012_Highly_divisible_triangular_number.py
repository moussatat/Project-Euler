# -*- coding: utf-8 -*-
#Problem 012 Highly divisible triangular number
#The sequence of triangle numbers is generated by adding the natural numbers. 
#So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
#1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
#Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
#10: 1,2,5,10
#15: 1,3,5,15
#21: 1,3,7,21
#28: 1,2,4,7,14,28
#We can see that 28 is the first triangle number to have over five divisors.
#
#What is the value of the first triangle number to have over five hundred divisors?
import time

start=time.time()

n=1
compteur = 0
while compteur <= 250 :
    nbr=n*(n+1)//2
    compteur = 0 
    for i in range(int(nbr**0.5)) :
        if nbr%(i+1)==0:
            compteur = compteur + 1 
    n=n+1
print(f"le nombre triangulaire de rang {n-1}, donc {(n-1)*n//2}")

end=time.time()
print(f"temps pour trouver la réponse : {end-start}") 
#temps pour trouver la réponse : 8.569902896881104